// CODE
pre,
code,
kbd,
samp {
	font-family: var(--font-monospace-code);
}

code:not(pre code) {
	box-shadow: var(--edge-highlight);
	border-radius: var(--rounded-corner-small);
	background-color: var(--surface);
	padding: 0.125rem 0.375rem;
	color: var(--love);
	font-size: var(--font-size-small-em);
	border: 1px solid var(--overlay);
}

pre {
	margin: 1rem 0 1rem;
	box-shadow: var(--edge-highlight), var(--shadow);
	border-radius: var(--rounded-corner);
	background-color: var(--surface);
	padding: 1rem;
	max-width: 100vw;
	overflow: auto;
	line-height: normal;
	border: 1px solid var(--overlay);

	// Code syntax highlighting colors
	.token {
		&.comment,
		&.prolog,
		&.doctype,
		&.cdata {
			color: var(--fg-muted-3);
			font-style: italic;
		}

		&.punctuation {
			color: var(--fg-muted-4);
		}

		&.property,
		&.tag,
		&.boolean,
		&.number,
		&.constant,
		&.symbol,
		&.deleted {
			color: var(--love);
		}

		&.selector,
		&.attr-name,
		&.string,
		&.char,
		&.builtin,
		&.inserted {
			color: var(--pine);
		}

		&.operator,
		&.entity,
		&.url,
		.language-css &.string,
		.style &.string {
			color: var(--foam);
		}

		&.atrule,
		&.attr-value,
		&.keyword {
			color: var(--iris);
		}

		&.function,
		&.class-name {
			color: var(--gold);
		}

		&.regex,
		&.important,
		&.variable {
			color: var(--rose);
		}

		&.important,
		&.bold {
			font-weight: bold;
		}

		&.italic {
			font-style: italic;
		}

		&.entity {
			cursor: help;
		}
	}

	table {
		box-shadow: none;
		border-radius: 0;
		background-color: transparent;
		table-layout: auto;
		overflow: hidden;

		tr {
			&:nth-child(even) {
				background-color: transparent;
			}

			th,
			td {
				padding: 0;
			}

			th {
				background-color: transparent;
				font-weight: normal;
			}
		}
	}

	// The line number cells
	table td:nth-of-type(1) {
		-webkit-user-select: none;
		user-select: none;
		text-align: center;
		color: var(--fg-muted-3);
		background-color: var(--overlay);
		border-right: 1px solid var(--fg-muted-2);
		padding-right: 0.75rem;
		padding-left: 0.5rem;
	}

	// Code content cells
	table td:nth-of-type(2) {
		padding-left: 1rem;
		width: 100%;
	}

	mark {
		display: block;
		box-shadow: none;
		border-radius: 0;
		background-color: var(--fg-muted-2);
		padding: 0;
		color: var(--fg-color);
		
		// Highlighted line styling
		&.highlight-line {
			background-color: rgba(var(--iris-rgb), 0.1);
			border-left: 3px solid var(--iris);
			padding-left: 0.5rem;
		}
	}

	// The line numbers already provide some kind of left/right padding
	&[data-linenos] {
		padding: 1rem 0;
	}

	// Different code block styles for different themes
	:root[data-theme*="rose-pine"] & {
		.token.keyword {
			color: var(--iris);
		}
		
		.token.string {
			color: var(--foam);
		}
	}

	:root[data-theme*="catppuccin"] & {
		.token.keyword {
			color: var(--iris);
		}
		
		.token.string {
			color: var(--foam);
		}
	}

	// Language-specific styling
	&[data-lang="bash"],
	&[data-lang="shell"] {
		.token.function {
			color: var(--pine);
		}
	}

	&[data-lang="json"] {
		.token.property {
			color: var(--foam);
		}
		
		.token.string {
			color: var(--rose);
		}
	}

	&[data-lang="css"],
	&[data-lang="scss"],
	&[data-lang="sass"] {
		.token.selector {
			color: var(--love);
		}
		
		.token.property {
			color: var(--foam);
		}
	}
}

// Inline code in different contexts
article {
	code:not(pre code) {
		// Make inline code more subtle in articles
		background-color: var(--overlay);
		color: var(--pine);
	}
}

// Code blocks in alerts
.alert {
	pre {
		background-color: var(--overlay);
		border: 1px solid var(--fg-muted-2);
	}
	
	code:not(pre code) {
		background-color: var(--fg-muted-2);
		color: var(--foam);
	}
}

// Copy button styling (if you have one)
.copy-button {
	position: absolute;
	top: 0.5rem;
	right: 0.5rem;
	background-color: var(--surface);
	border: 1px solid var(--overlay);
	border-radius: var(--rounded-corner-small);
	padding: 0.25rem 0.5rem;
	color: var(--fg-muted-4);
	font-size: var(--font-size-small);
	cursor: pointer;
	transition: var(--transition);

	&:hover {
		background-color: var(--overlay);
		color: var(--fg-color);
	}

	&:active {
		transform: var(--active);
	}
}
